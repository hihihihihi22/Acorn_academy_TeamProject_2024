<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="trainer">

	<!-- 새로운 트레이너 등록 -->
	<insert id="create" parameterType="com.example.setting.memberset.TrainerDto">
	    <!-- INSERT 이후에 자동 증가된 trainer_num 값을 가져와서 TrainerDto 객체에 설정 -->
	    <selectKey keyProperty="trainerNum" resultType="int" order="AFTER">
	        SELECT LAST_INSERT_ID()
	    </selectKey>
	    
	    INSERT INTO trainerInfo_tbl (trainer_insta, trainer_intro, gym_link, gym_name)
	    VALUES (#{trainerInsta}, #{trainerIntro}, #{gymLink}, #{gymName})
	</insert>
	
	<!-- 트레이너 업데이트 -->
	<update id="update" parameterType="com.example.setting.memberset.TrainerDto">
		UPDATE trainerInfo_tbl
		SET trainer_insta=#{trainerInsta},trainer_intro=#{trainerIntro}, gym_link=#{gymLink},gym_name={#gymName}
		WHERE trainer_num=#{trainer_num}
	</update>
	
	<!-- 트레이너 삭제 -->
	<!-- 이건 트레이너 삭제 기능인데 총 회원을 담당하는 user쪽에서 구현해야 하는 것 같기도 해.... 근데 일단 만들어 놓기는 함 -->
	<delete id="delete" parameterType="int">
		DELETE FROM trainer_tbl
		WHERE trianer_num=#{trainerNum}
	</delete>
	
	<!-- 특정 트레이너 번호 조회 -->
	<select id="selectTrinerNum" parameterType="string" resultType="int">
	    SELECT trainer_num
	    FROM trainer_tbl
	    WHERE user_id = #{userID}
	</select>
	
	<!-- 트레이너 정보 조회 -->
	<select id="selectTrinerInfo" parameterType="int" resultType="com.example.setting.memberset.TrainerDto">
	SELECT trainer_insta, trainer_intro, gym_link, gym_name
	FROM trainerInfo_tbl
	WHERE trainer_num = #{trainerNum}
	</select>
	

</mapper>